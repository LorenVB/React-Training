{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCJdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVlB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAGlB,sBAAKgB,UAAU,yCAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCLFS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNe,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAkBrC,OAXAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GACfH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAItB,CAACtB,IAGIuB,EDhByBK,CAAa5B,GAAjCa,EADyB,EAC/BN,KAAce,EADiB,EACjBA,QAGtB,OAFAN,QAAQC,IAAIK,GAGV,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,wCACZ,qBAAKJ,UAAU,kDAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEVnBkB,EAAe,WAAO,IAAD,EAEI3C,mBAAS,CAAC,cAFd,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAIhC,OACE,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIC6C,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,UCZtB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ada05ff8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n    </form>\r\n  );\r\n\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=EVkrmoplEL5jWWeASLKV4kF0nabrA6hV`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    console.log({id,title,url});\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  console.log(loading);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid animate__animated animate__rubberBand\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs= (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs=> {\r\n                setState({  \r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n        })\r\n\r\n    },[category])\r\n\r\n \r\n    return state;\r\n\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {GifExpertApp} from './GifExpertApp'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}